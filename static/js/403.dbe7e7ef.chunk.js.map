{"version":3,"file":"static/js/403.dbe7e7ef.chunk.js","mappings":"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","sources":["components/errorMessage/ErrorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","components/CharSearchForm/CharSearchForm.js","components/pages/MainPage.js","components/spinner/Spinner.js","services/MarvelService.js","components/hooks/http.hooks.js","components/skeleton/Skeleton.js","utils/setContent.js"],"sourcesContent":["import img from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}} src={img} alt=\"Error\" />\r\n    )\r\n}\r\n\r\nexport default ErrorMessage","import { useEffect, useState } from 'react';\nimport useMarvelService from '../../services/MarvelService';\nimport setContent from '../../utils/setContent';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n    const [char, setChar] = useState({});\n    const {getCharacter, clearError, process, setProcess} = useMarvelService();\n\n    useEffect(() => {\n        updateChar()\n    }, [])\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n\n    }\n\n    const updateChar = () => {\n        clearError();\n\n        const id  = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n            getCharacter(id)\n            .then(onCharLoaded)\n            .then(()=> setProcess('confirmed'));\n    }\n\n    return (\n        <div className=\"randomchar\">\n            {setContent(process, View, char)}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button \n                className=\"button button__main\"\n                onClick={updateChar}\n                >\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    )\n}\n\nconst View = ({data}) => {\n    const {name, description, thumbnail, homepage, wiki} = data;\n    let styleImg = null\n    if (thumbnail) {\n        styleImg = thumbnail.match(/image_not_available/) ? 'contain' : null;\n    }\n\n    return (\n        <div className=\"randomchar__block\">\n            <img \n            src={thumbnail} \n            alt=\"Random character\" \n            className=\"randomchar__img\"\n            style={{objectFit: styleImg}}\n            />\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import React, { useState, useEffect, useRef, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './charList.scss';\n\n\nconst setContent = (process, Component, newItemLoading) => {\n    switch (process) {\n        case 'waiting':\n            return <Spinner/>\n            break;\n        case 'loading':\n            return newItemLoading ? <Component/> : <Spinner/>\n            break;\n        case 'confirmed':\n            return <Component/>\n            break;\n        case 'error':\n            return <ErrorMessage/>\n            break;\n        default:\n            throw new Error('Unexpected procces state')\n    }\n}\n\nconst CharList = (props) => {\n\n    const [charList, setCharList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [charEnded, setCharEnded] = useState(false)\n\n    const {getAllCharacters, clearError, process, setProcess} = useMarvelService()\n\n    useEffect(() => {\n        onRequest(offset, true)\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        clearError();\n\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n\n        getAllCharacters(offset)\n        .then(onCharLoaded)\n        .then(()=> setProcess('confirmed'));\n    }\n\n    const onCharLoaded = (newCharList) => {\n        let ended = false;\n        if(newCharList.length < 9) {\n            ended = true\n        }\n\n        setCharList(charList => [...charList, ...newCharList]);\n        setNewItemLoading(false);\n        setOffset(offset => offset + 9);\n        setCharEnded(ended);\n    }\n\n    const myRefs = useRef([]);\n\n\n\n    const clickFocus = (id) => {\n       \n        myRefs.current.forEach(item => {\n            item.classList.remove('char__item_selected')\n        })\n        myRefs.current[id].classList.add('char__item_selected')\n    }\n\n    function renderItem(arr) {\n        const items = arr.map((elem, i) => {\n            const {name, thumbnail, id} = elem\n            const styleImg = thumbnail.match(/image_not_available/) ? 'contain' : null;\n            \n            return (\n                <li \n                className=\"char__item\"\n                key={i} ref={el => myRefs.current[i] = el} \n                tabIndex={i}\n                onClick={(e) => {props.onCharSelected(id); clickFocus(i)}}>\n                    <img src={thumbnail} alt={name} style={{objectFit: styleImg}}/>\n                    <div className=\"char__name\">{name}</div>\n                </li>\n            )\n        });\n    \n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const element = useMemo(() => {\n        return setContent((process), ()=>renderItem(charList), newItemLoading)\n    }, [process])\n\n    return (\n        <div className=\"char__list\">\n            {element}\n            <button className=\"button button__main button__long\"\n            disabled={newItemLoading}\n            style={{'display': charEnded ? 'none' : 'block'}}\n            onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n    \n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;\n\n\n    \n            ","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport setContent from '../../utils/setContent';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './charInfo.scss';\n\n\nconst CharInfo = (props) => {\n    const [char, setChar] = useState(null);\n    const {getCharacter, process, setProcess} = useMarvelService();\n\n    useEffect(() => {\n        updateChar()\n    }, [props.charId])\n\n    const updateChar = () => {\n        const {charId} = props\n\n        if(!charId) {\n            return\n        }\n\n        getCharacter(charId)\n            .then(onCharLoaded)\n            .then(()=> setProcess('confirmed'));\n    }\n\n    const onCharLoaded = (char) => {\n        setChar(char)\n    }\n\n    return (\n        <div className=\"char__info\">\n            {setContent(process, View, char)}\n        </div>\n    )\n\n}\n\nconst View = ({data}) => {\n    \n    const {name, description, thumbnail, homepage, wiki, comics} = data;\n    const styleImg = thumbnail.match(/image_not_available/) ? 'contain' : null;\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={{objectFit: styleImg}}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {\n                    comics.length > 0 \n                    ? comics.map((item, i) => {\n                        while(i < 10) {\n                            return(\n                                <li key={i} className=\"char__comics-item\">\n                                    <Link \n                                    to={`/comics/${item.resourceURI.slice(43)}`}>{item.name}</Link>\n                                </li>\n                            )\n                        }\n                    })\n                    : \"Comics not found\"\n                }\n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo)\r\n\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary","import {useState} from 'react';\r\nimport { Formik, Form, Field, ErrorMessage as FormikErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nimport './charSearchForm.scss';\r\n\r\nconst CharSearchForm = () => {\r\n    const [char, setChar] = useState(null);\r\n    const {getCharacterByName, clearError, process, setProcess} = useMarvelService();\r\n\r\n    const onCharLoaded = (char) => {\r\n        setChar(char);\r\n    }\r\n\r\n    const updateChar = (name) => {\r\n        clearError();\r\n\r\n        getCharacterByName(name)\r\n            .then(onCharLoaded)\r\n            .then(()=> setProcess('confirmed'));\r\n    }\r\n\r\n    const errorMessage = process === 'error' ? <div className=\"char__search-critical-error\"><ErrorMessage /></div> : null;\r\n    const results = !char ? null : char.length > 0 ?\r\n                    <div className=\"char__search-wrapper\">\r\n                        <div className=\"char__search-success\">There is! Visit {char[0].name} page?</div>\r\n                        <Link to={`/characters/${char[0].id}`} className=\"button button__secondary\">\r\n                            <div className=\"inner\">To page</div>\r\n                        </Link>\r\n                    </div> : \r\n                    <div className=\"char__search-error\">\r\n                        The character was not found. Check the name and try again\r\n                    </div>;\r\n\r\n    return (\r\n        <div className=\"char__search-form\">\r\n            <Formik\r\n                initialValues = {{\r\n                    charName: ''\r\n                }}\r\n                validationSchema = {Yup.object({\r\n                    charName: Yup.string().required('This field is required')\r\n                })}\r\n                onSubmit = { ({charName}) => {\r\n                    updateChar(charName);\r\n                }}\r\n            >\r\n                <Form>\r\n                    <label className=\"char__search-label\" htmlFor=\"charName\">Or find a character by name:</label>\r\n                    <div className=\"char__search-wrapper\">\r\n                        <Field \r\n                            id=\"charName\" \r\n                            name='charName' \r\n                            type='text' \r\n                            placeholder=\"Enter name\"/>\r\n                        <button \r\n                            type='submit' \r\n                            className=\"button button__main\"\r\n                            disabled={process === 'loading' ? true : false}>\r\n                            <div className=\"inner\">find</div>\r\n                        </button>\r\n                    </div>\r\n                    <FormikErrorMessage component=\"div\" className=\"char__search-error\" name=\"charName\" />\r\n                </Form>\r\n            </Formik>\r\n            {results}\r\n            {errorMessage}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CharSearchForm;","import { useState } from \"react\";\r\n\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\n\r\nimport decoration from '../../resources/img/vision.png';\r\nimport CharSearchForm from \"../CharSearchForm/CharSearchForm\";\r\n\r\nconst MainPage = () => {\r\n    const [selectedChar, setSelectedChar] = useState(null)\r\n\r\n    const onCharSelected = (id) => {\r\n        setSelectedChar(selectedChar => id)\r\n    }\r\n    \r\n    return (\r\n       <>\r\n            <ErrorBoundary>\r\n                <RandomChar/>\r\n            </ErrorBoundary>\r\n            <div className=\"char__content\">\r\n                <ErrorBoundary>\r\n                    <CharList onCharSelected={onCharSelected}/>\r\n                </ErrorBoundary>\r\n                <div>\r\n                    <ErrorBoundary>\r\n                        <CharInfo charId={selectedChar}/>\r\n                    </ErrorBoundary>\r\n                    <CharSearchForm/>\r\n                </div>\r\n            </div>\r\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n       </> \r\n    )\r\n}\r\n\r\nexport default MainPage;","const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n            <g transform=\"rotate(0)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n            <g transform=\"rotate(45)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n            <g transform=\"rotate(90)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n            <g transform=\"rotate(135)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n            <g transform=\"rotate(180)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n            <g transform=\"rotate(225)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n            <g transform=\"rotate(270)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n            <g transform=\"rotate(315)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import {useHttp} from '../components/hooks/http.hooks'\r\n\r\nconst useMarvelService = () => {\r\n\r\n    const {request, clearError, process, setProcess} = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=a91a8c6340247f931cd00add9e242181';\r\n    const _baseOffset = 210;\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter)\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0])\r\n    }\r\n\r\n    const getCharacterByName = async (name) => {\r\n        const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`) \r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getAllComics = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformComics)\r\n    }\r\n\r\n    const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n        return _transformComics(res.data.results[0]);\r\n    }\r\n\r\n    const _transformComics = (comics) => {\r\n        return {\r\n            id: comics.id,\r\n            name: comics.title,\r\n            description: comics.description || 'There is no description',\r\n            pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\r\n            language: comics.textObjects.language || 'en-us',\r\n            price: comics.prices[0].price ? `${comics.prices[0].price}$` : 'not available',\r\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n            url: comics.urls[0].url\r\n        }\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0, 201)}...`: 'There is no description for this character',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url, \r\n            wiki: char.urls[1].url,\r\n            id: char.id,\r\n            comics: char.comics.items \r\n        }\r\n    }\r\n\r\n    return {getAllCharacters, getCharacter, getCharacterByName, getAllComics, getComic, clearError, process, setProcess}\r\n}\r\n\r\nexport default useMarvelService","import { useCallback, useState } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [process, setProcess] = useState('waiting');\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-type': 'aplication/json'}) => {\r\n\r\n        setProcess('loading')\r\n        try {\r\n            const response = await fetch(url,{ method, body, headers});\r\n\r\n            if(!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status:${response.status}`)\r\n            }\r\n\r\n            const data = await response.json()\r\n\r\n            return data\r\n        } catch (e) {\r\n            setProcess('error')\r\n            throw e\r\n        }\r\n\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => {\r\n        setProcess('loading')\r\n    }, [])\r\n\r\n    return {request, clearError, process, setProcess}\r\n}","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import ErrorMessage from \"../components/errorMessage/ErrorMessage\";\r\nimport Skeleton from \"../components/skeleton/Skeleton\"\r\nimport Spinner from \"../components/spinner/Spinner\";\r\n\r\nconst setContent = (process, Component, data) => {\r\n    switch (process) {\r\n        case 'waiting':\r\n            return <Skeleton/>\r\n            break;\r\n        case 'loading':\r\n            return <Spinner/>\r\n            break;\r\n        case 'confirmed':\r\n            return <Component data={data}/>\r\n            break;\r\n        case 'error':\r\n            return <ErrorMessage/>\r\n            break;\r\n        default:\r\n            throw new Error('Unexpected procces state')\r\n    }\r\n}\r\n\r\nexport default setContent;"],"names":["style","display","width","height","objectFit","margin","src","img","alt","View","data","name","description","thumbnail","homepage","wiki","styleImg","match","className","href","useState","char","setChar","useMarvelService","getCharacter","clearError","process","setProcess","useEffect","updateChar","onCharLoaded","id","Math","floor","random","then","setContent","onClick","mjolnir","props","charList","setCharList","newItemLoading","setNewItemLoading","offset","setOffset","charEnded","setCharEnded","getAllCharacters","onRequest","initial","newCharList","ended","length","myRefs","useRef","renderItem","arr","items","map","elem","i","ref","el","current","tabIndex","e","onCharSelected","forEach","item","classList","remove","add","clickFocus","element","useMemo","Component","Spinner","ErrorMessage","Error","disabled","comics","to","resourceURI","slice","charId","ErrorBoundary","state","error","errorInfo","console","log","this","setState","children","getCharacterByName","errorMessage","results","initialValues","charName","validationSchema","Yup","required","onSubmit","htmlFor","type","placeholder","component","selectedChar","setSelectedChar","decoration","xmlns","background","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","begin","values","keyTimes","dur","repeatCount","request","useCallback","url","method","body","headers","fetch","response","ok","status","json","useHttp","_apiBase","_apiKey","_baseOffset","res","_transformCharacter","getAllComics","_transformComics","getComic","title","pageCount","language","textObjects","price","prices","path","extension","urls"],"sourceRoot":""}